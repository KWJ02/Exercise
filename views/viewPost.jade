doctype html
html(lang='en', data-bs-theme='auto')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(name='description', content='')
    meta(name='author', content='Mark Otto, Jacob Thornton, 그리고 Bootstrap 기여자들')
    meta(name='generator', content='Hugo 0.122.0')
    title Exercise-Recommender
    link(rel='canonical', href='https://getbootstrap.kr/docs/5.3/examples/product/')
    // 부트스트랩 최신 버전 CSS CDN 링크 추가
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css', rel='stylesheet', integrity='sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH', crossorigin='anonymous')
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/@docsearch/css@3')
    // Favicons
    link(rel='apple-touch-icon', href='/docs/5.3/assets/img/favicons/apple-touch-icon.png', sizes='180x180')
    link(rel='icon', href='/docs/5.3/assets/img/favicons/favicon-32x32.png', sizes='32x32', type='image/png')
    link(rel='icon', href='/docs/5.3/assets/img/favicons/favicon-16x16.png', sizes='16x16', type='image/png')
    link(rel='mask-icon', href='/docs/5.3/assets/img/favicons/safari-pinned-tab.svg', color='#712cf9')
    link(rel='icon', href='/docs/5.3/assets/img/favicons/favicon.ico')
    meta(name='theme-color', content='#712cf9')
    style.
      body {
        background-image: linear-gradient(to top left, #bdc3c7, #2c3e50);
      }

      #mainBanner {
        background-image: linear-gradient(to top left, #a1c4fd, #ffd1ff);
        transition : all 0.3s ease;
      }

      main {
        display: flex;
        flex-wrap: wrap;
      }

      .mainBanner {
        flex: 1 0 100%;
      }

      .subBanner {
        flex: 1 0 50%;
      }
      
      .moveBanner {
        transition : all 0.3s ease;
      }
      .moveBanner:hover {
        transform: translateY(-5px);
      }

      .gradient {
        color : linear-gradient(to top left, #bdc3c7, #2c3e50);
      }

      .subBanner_b {
        background-image : linear-gradient(to top left, #a1c4fd, #c2e9fb)
      }
      .subBanner_w {
        background-image : linear-gradient(to top left, #cfd9df, #e2ebf0)
      }

      .bd-placeholder-img {
        font-size: 1.125rem;
        text-anchor: middle;
        -webkit-user-select: none;
        -moz-user-select: none;
        user-select: none;
      }

      @media (min-width: 768px) {
        .bd-placeholder-img-lg {
          font-size: 3.5rem;
        }
      }

      .b-example-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }

      .b-example-vr {
        flex-shrink: 0;
        width: 1.5rem;
        height: 100vh;
      }

      .bi {
        vertical-align: -.125em;
        fill: currentColor;
      }

      .nav-scroller {
        position: relative;
        z-index: 2;
        height: 2.75rem;
        overflow-y: hidden;
      }

      .nav-scroller .nav {
        display: flex;
        flex-wrap: nowrap;
        padding-bottom: 1rem;
        margin-top: -1px;
        overflow-x: auto;
        text-align: center;
        white-space: nowrap;
        -webkit-overflow-scrolling: touch;
      }

      .btn-bd-primary {
        --bd-violet-bg: #712cf9;
        --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

        --bs-btn-font-weight: 600;
        --bs-btn-color: var(--bs-white);
        --bs-btn-bg: var(--bd-violet-bg);
        --bs-btn-border-color: var(--bd-violet-bg);
        --bs-btn-hover-color: var(--bs-white);
        --bs-btn-hover-bg: #6528e0;
        --bs-btn-hover-border-color: #6528e0;
        --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
        --bs-btn-active-color: var(--bs-btn-hover-color);
        --bs-btn-active-bg: #5a23c8;
        --bs-btn-active-border-color: #5a23c8;
      }

      .bd-mode-toggle {
        z-index: 1500;
      }

      .bd-mode-toggle .dropdown-menu .active .bi {
        display: block !important;
      }

      .d-md-flex {
        justify-content: center;
      }

      
              /* 스타일 추가 */
        .comment-card {
          border: 1px solid #ddd;
          border-radius: 8px;
          padding: 15px;
          margin-bottom: 15px;
          box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
          background-color: #f9f9f9;
        }

        .comment-header {
          display: flex;
          align-items: center;
          margin-bottom: 10px;
        }

        .comment-author-avatar {
          width: 40px;
          height: 40px;
          border-radius: 50%;
          margin-right: 10px;
        }

        .comment-author-info {
          display: flex;
          flex-direction: column;
        }

        .comment-author {
          font-weight: bold;
          margin-bottom: 2px;
        }

        .comment-date {
          font-size: 0.9em;
          color: #888;
        }

        .comment-content {
          white-space: pre-line;
          margin-bottom: 10px;
        }

        .comment-actions {
          display: flex;
          gap: 10px;
        }

        .comment-actions .btn {
          font-size: 0.85em;
          padding: 5px 10px;
        }

       .hidden {
         display: none;
       }


  body
    svg.d-none(xmlns="http://www.w3.org/2000/svg")
      symbol(id="check2", viewBox="0 0 16 16")
        path(d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z")
      symbol(id="circle-half", viewBox="0 0 16 16")
        path(d="M8 15A7 7 0 1 0 8 1v14zm0 1A8 8 0 1 1 8 0a8 8 0 0 1 0 16z")
      symbol(id="moon-stars-fill", viewBox="0 0 16 16")
        path(d="M6 .278a.768.768 0 0 1 .08.858 7.208 7.208 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277.527 0 1.04-.055 1.533-.16a.787.787 0 0 1 .81.316.733.733 0 0 1-.031.893A8.349 8.349 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.752.752 0 0 1 6 .278z")
        path(d="M10.794 3.148a.217.217 0 0 1 .412 0l.387 1.162c.173.518.579.924 1.097 1.097l1.162.387a.217.217 0 0 1 0 .412l-1.162.387a1.734 1.734 0 0 0-1.097 1.097l-.387 1.162a.217.217 0 0 1-.412 0l-.387-1.162A1.734 1.734 0 0 0 9.31 6.593l-1.162-.387a.217.217 0 0 1 0-.412l1.162-.387a1.734 1.734 0 0 0 1.097-1.097l.387-1.162zM13.863.099a.145.145 0 0 1 .274 0l.258.774c.115.346.386.617.732.732l.774.258a.145.145 0 0 1 0 .274l-.774.258a1.156 1.156 0 0 0-.732.732l-.258.774a.145.145 0 0 1-.274 0l-.258-.774a1.156 1.156 0 0 0-.732-.732l-.774-.258a.145.145 0 0 1 0-.274l.774-.258c.346-.115.617-.386.732-.732L13.863.1z")
      symbol(id="sun-fill", viewBox="0 0 16 16")
        path(d="M8 12a4 4 0 1 0 0-8 4 4 0 0 0 0 8zM8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0zm0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13zm8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5zM3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8zm10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0zm-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0zm9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707zM4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708z")
      symbol(id="chevron-right" viewBox="0 0 16 16")
        path(fill-rule="evenodd" d="M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z")
    nav.navbar.navbar-expand-md.bg-dark.sticky-top.border-bottom(data-bs-theme="dark")
      .container
        a.navbar-brand.d-md-none(href="/")
          svg.bi(width="24", height="24")
            use(xlink:href="#aperture")
          | E-Recommender
        button.navbar-toggler(type="button", data-bs-toggle="offcanvas", data-bs-target="#offcanvas", aria-controls="offcanvas", aria-label="Toggle navigation")
          span.navbar-toggler-icon
        .offcanvas.offcanvas-end#offcanvas(tabindex="-1", aria-labelledby="offcanvasLabel")
          .offcanvas-header
            h5.offcanvas-title#offcanvasLabel E-Recommender
            button.btn-close(type="button", data-bs-dismiss="offcanvas", aria-label="Close")
          .offcanvas-body
            ul.navbar-nav.flex-grow-1.justify-content-between
              li.nav-item
                a.nav-link(href="/main") E-Recommender
              li.nav-item
                a.nav-link(href="/bmiCalc") BMI 측정
              li.nav-item
                a.nav-link(href="/exerciseRec") 운동 추천
              li.nav-item
                a.nav-link(href="/community") 커뮤니티
              li.nav-item.dropdown
                a.nav-link.dropdown-toggle(href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false")= name + '님'
                .dropdown-menu
                  - if(id === 'admin')
                    a.dropdown-item(href="/myPage") 관리자 페이지
                    a#logoutButton.dropdown-item(href="/main") 로그아웃
                  
                  - else
                    a.dropdown-item(href="/myPage") 마이페이지
                    a#logoutButton.dropdown-item(href="/main") 로그아웃
.container
  hr
  h2 게시글 내용
  .post-details
    table.post-details.table.table-striped
      hr
      tr
        th 작성자
        td #{post.name}
      tr
        th 작성일
        td #{post.created_at}
      

  table#postContent.table.table-striped
    tr
      th(style="text-align: center;") 게시글 제목
    tr
      td(style="white-space: pre-line;") #{post.title}
      hr
    tr
      th(style="text-align: center;") 게시글 내용
    tr
      td(style="white-space: pre-line;") #{post.content}

  hr
  h3 댓글 작성
  form#commentForm.form-group.row(action='/comments/' + post.post_id + '/comment', method='POST', onsubmit='return disableButton(this)')
    .col-sm-12
      label(for='commentInput') 댓글 작성:
      input.form-control(type='text', id='commentInput', name='content', placeholder='댓글을 입력해주세요...', required)
    .col-sm-12
      br
      button.btn.btn-primary(type='submit') 댓글 작성

  hr
  h3 댓글
  if comments.length
    each comment in comments
      .comment-card
        .comment-header
          .comment-author-info
            .comment-author= comment.author_name || '익명'
            .comment-date #{comment.created_at}
        .comment-content #{comment.content}
        .comment-actions
          button.btn.btn-sm.btn-outline-primary(type='button', id='likeButton-comment-' + comment.comment_id, data-comment-id=comment.comment_id, onclick='likeComment(' + comment.comment_id + ')') 좋아요 <span id='likeCount-comment-' + comment.comment_id>#{comment.like_count}</span>
          button.btn.btn-sm.btn-outline-secondary(type='button', data-comment-id=comment.comment_id, onclick='showReplyForm(' + comment.comment_id + ')') 답글
        form.replyForm.hidden(id='replyForm-' + comment.comment_id, action='/comments/' + post.post_id + '/reply', method='POST', onsubmit='return disableButton(this)')
          input(type='hidden', name='parent_comment_id', value=comment.comment_id)
          .form-group
            label(for='replyInput-' + comment.comment_id) 답글 작성:
            input.form-control(type='text', id='replyInput-' + comment.comment_id, name='content', placeholder='답글을 입력해주세요...', required)
          button.btn.btn-primary(type='submit') 답글 작성
        if comment.replies && comment.replies.length
          .replies
            each reply in comment.replies
              .reply-card
                .reply-header
                  .reply-author-info
                    .reply-author= reply.reply_author_name || '익명'
                    .reply-date #{reply.reply_created_at}
                .reply-content #{reply.reply_content}
                .reply-actions
                  button.btn.btn-sm.btn-outline-primary(type='button', id='likeButton-reply-' + reply.reply_id, data-reply-id=reply.reply_id, onclick='likeReply(' + reply.reply_id + ')') 좋아요 <span id='likeCount-reply-' + reply.reply_id>#{reply.like_count}</span>
  else
    p 댓글이 없습니다.

style.
  .comment-card {
    border: 1px solid #ddd;
    margin-bottom: 1em;
    padding: 1em;
    background-color: #f9f9f9;
  }
  .replies {
    margin-top: 1em; /* 댓글과 답글 사이에 여백 추가 */
  }
  .reply-card {
    border: 1px solid #ddd;
    margin-bottom: 1em;
    margin-left: 2em;
    padding: 1em;
    background-color: #e9ecef; /* 다른 배경색으로 변경 */
  }
  .hidden {
    display: none;
  }

script.
  function disableButton(form) {
    var button = form.querySelector('button[type="submit"]');
    if (button.disabled) {
      return false; // 이미 비활성화된 버튼이면 폼 제출 중단
    }
    button.disabled = true;
    return true; // 폼 제출을 계속 진행
  }

script.
  function likeComment(commentId) {
    var likeButton = document.getElementById('likeButton-comment-' + commentId);
    if (likeButton.textContent.includes('취소')) {
      alert('이미 좋아요를 눌렀습니다.');
      return;
    }
    fetch('/comments/' + commentId + '/like', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert(data.error);
      } else {
        var likeCountElement = document.getElementById('likeCount-comment-' + commentId);
        likeCountElement.textContent = data.likeCount;
        likeButton.textContent = '좋아요 취소';
        likeButton.setAttribute('onclick', 'unlikeComment(' + commentId + ')');
      }
    })
    .catch(error => {
      console.error('Error liking comment:', error);
    });
  }

script.
  function unlikeComment(commentId) {
    fetch('/comments/' + commentId + '/unlike', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert(data.error);
      } else {
        var likeCountElement = document.getElementById('likeCount-comment-' + commentId);
        likeCountElement.textContent = data.likeCount;
        var likeButton = document.getElementById('likeButton-comment-' + commentId);
        likeButton.textContent = '좋아요';
        likeButton.setAttribute('onclick', 'likeComment(' + commentId + ')');
      }
    })
    .catch(error => {
      console.error('Error unliking comment:', error);
    });
  }

// 좋아요 기능
script.
  function likeReply(replyId) {
    var likeButton = document.getElementById('likeButton-reply-' + replyId);
    if (likeButton.textContent.includes('취소')) {
      alert('이미 좋아요를 눌렀습니다.');
      return;
    }
    fetch('/comments/replies/' + replyId + '/like', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert(data.error);
      } else {
        var likeCountElement = document.getElementById('likeCount-reply-' + replyId);
        likeCountElement.textContent = data.likeCount;
        likeButton.textContent = '좋아요 취소';
        likeButton.setAttribute('onclick', 'unlikeReply(' + replyId + ')');
      }
    })
    .catch(error => {
      console.error('Error liking reply:', error);
    });
  }

script.
  function unlikeReply(replyId) {
    fetch('/comments/replies/' + replyId + '/unlike', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      if (data.error) {
        alert(data.error);
      } else {
        var likeCountElement = document.getElementById('likeCount-reply-' + replyId);
        likeCountElement.textContent = data.likeCount;
        var likeButton = document.getElementById('likeButton-reply-' + replyId);
        likeButton.textContent = '좋아요';
        likeButton.setAttribute('onclick', 'likeReply(' + replyId + ')');
      }
    })
    .catch(error => {
      console.error('Error unliking reply:', error);
    });
  }


script.
  function showReplyForm(commentId) {
    var form = document.getElementById('replyForm-' + commentId);
    form.classList.toggle('hidden');
  }

footer.container.py-5
  .row
    .col-12.col-md
      svg(xmlns="http://www.w3.org/2000/svg", width="24", height="24", fill="none", stroke="currentColor", stroke-linecap="round", stroke-linejoin="round", stroke-width="2", class="d-block mb-2", role="img", viewBox="0 0 24 24")
        title Product
        circle(cx="12", cy="12", r="10")
        path(d="M14.31 8l5.74 9.94M9.69 8h11.48M7.38 12l5.74-9.94M9.69 16L3.95 6.06M14.31 16H2.83")
      small.d-block.mb-3.text-body-secondary &copy; 2017–2024
    .col-6.col-md
      h5 Features
      ul.list-unstyled.text-small
        li: a.link-light.text-decoration-none(href="#") Cool stuff
        li: a.link-light.text-decoration-none(href="#") Random feature
        li: a.link-light.text-decoration-none(href="#") Team feature
        li: a.link-light.text-decoration-none(href="#") Stuff for developers
        li: a.link-light.text-decoration-none(href="#") Another one
        li: a.link-light.text-decoration-none(href="#") Last time
    .col-6.col-md
      h5 Resources
      ul.list-unstyled.text-small
        li: a.link-light.text-decoration-none(href="#") Resource name
        li: a.link-light.text-decoration-none(href="#") Resource
        li: a.link-light.text-decoration-none(href="#") Another resource
        li: a.link-light.text-decoration-none(href="#") Final resource
    .col-6.col-md
      h5 Resources
      ul.list-unstyled.text-small
        li: a.link-light.text-decoration-none(href="#") Business
        li: a.link-light.text-decoration-none(href="#") Education
        li: a.link-light.text-decoration-none(href="#") Government
        li: a.link-light.text-decoration-none(href="#") Gaming
    .col-6.col-md
      h5 About
      ul.list-unstyled.text-small
        li: a.link-light.text-decoration-none(href="#") Team
        li: a.link-light.text-decoration-none(href="#") Locations
        li: a.link-light.text-decoration-none(href="#") Privacy
        li: a.link-light.text-decoration-none(href="#") Terms
  script(src="quote.js")
    script.
      document.getElementById("logoutButton").addEventListener("click", function(event) {
        event.preventDefault();
        var url = "/logout";
        var xhr = new XMLHttpRequest();
        xhr.open("POST", url, true);
        xhr.onreadystatechange = function() {
            if (xhr.readyState === XMLHttpRequest.DONE) {
                if (xhr.status === 200) {
                    // 로그아웃 요청이 성공하면 페이지를 다시로드
                    window.location.reload();
                } else {
                    console.error("로그아웃 실패");
                }
            }
        };
        xhr.setRequestHeader("Content-Type", "application/json");
        var requestBody = {}; // 빈 객체로 설정
        xhr.send(JSON.stringify(requestBody));
      });

    script(src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js", integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r", crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.min.js", integrity="sha384-0pUGZvbkm6XF6gxjEnlmuGrJXVbNuzT9qBBavbLwCsOGabYfZo0T0to5eqruptLy", crossorigin="anonymous")